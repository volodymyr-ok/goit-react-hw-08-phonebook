{"version":3,"file":"static/js/540.f6659a6f.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.styled.js","components/AdditionalMenu/AdditionalMenu.styled.js","components/AdditionalMenu/AdditionalMenu.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","utils/contactsChecking.js","components/EditContactForm/EditContactForm.styled.js","components/EditContactForm/EditContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { colors } from 'utils/theme';\n\nexport const StyledLI = styled.li`\n  padding: 10px 0;\n  border-top: 1px solid ${colors.mainBorder};\n  border-bottom: 1px solid ${colors.mainBorder};\n  border-radius: 5px;\n\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  margin: 0 auto;\n  gap: 10px;\n  min-width: 250px;\n\n  .fisrtLetters {\n    min-width: 40px;\n    height: 40px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    border: 1px solid ${colors.mainBorder};\n  }\n  .contact-data {\n    display: inline-flex;\n    flex-direction: column;\n    gap: 5px;\n\n    .name {\n      /* font-weight: 400; */\n      font-size: 18px;\n      color: ${colors.mainColor};\n    }\n  }\n\n  .additional-menu-btn {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    /* width: 25px;\n    height: 25px; */\n    padding: 0;\n    margin-left: auto;\n\n    border-radius: 50%;\n    border: none;\n    background-color: ${colors.deleteContactBtn};\n    background-color: transparent;\n\n    color: ${colors.minorColor};\n    color: ${colors.mainColor};\n    font-weight: 700;\n    font-family: inherit;\n\n    cursor: pointer;\n\n    transform: translateX(45%);\n\n    svg {\n      pointer-events: none;\n    }\n\n    &:hover,\n    &:focus {\n      /* background-color: #9b6e14; */\n      /* color: #9b6e14; */\n      /* outline: 1px solid #9b6e14; */\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { colors } from 'utils/theme';\n\nexport const Menu = styled.ul`\n  position: absolute;\n  bottom: 47px;\n  right: 3px;\n  z-index: 1;\n\n  display: flex;\n  flex-direction: column;\n\n  padding: 0 5px;\n  transform: translate(0%, 20%);\n  opacity: 0;\n  pointer-events: none;\n  transition: all 250ms ease-in-out;\n\n  border-radius: 5px;\n  border-bottom-right-radius: 0;\n  border: 1px solid ${colors.mainBorder};\n  background-color: ${colors.modalBg};\n\n  &.opened {\n    pointer-events: all;\n    opacity: 1;\n    transform: translate(0, 0);\n  }\n\n  li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 10px;\n\n    min-height: 40px;\n    padding: 10px 5px;\n    background-color: transparent;\n    border: none;\n\n    color: ${colors.mainColor};\n    font-size: 18px;\n\n    cursor: pointer;\n\n    :hover,\n    :focus {\n      color: ${colors.mainTextColor};\n    }\n\n    a {\n      width: 100%;\n      height: 100%;\n      text-decoration: none;\n      color: inherit;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      gap: 10px;\n    }\n  }\n\n  li:not(:last-child) {\n    border-bottom: 2px solid ${colors.mainBorder};\n  }\n\n  .editIcon {\n    color: ${colors.editIcon};\n  }\n  .callIcon {\n    color: ${colors.callIcon};\n  }\n  .deleteIcon {\n    color: ${colors.deleteIcon};\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contactsOperations';\nimport { TiDeleteOutline } from 'react-icons/ti';\nimport { MdOutlineCall, MdOutlineModeEditOutline } from 'react-icons/md';\nimport { Menu } from './AdditionalMenu.styled';\n\nexport const AdditionalMenu = ({\n  id,\n  name,\n  number,\n  changeName,\n  changeNumber,\n  changeId,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleEditContact = () => {\n    changeName(name);\n    changeNumber(number);\n    changeId(id);\n    const modal = document.querySelector('.edit-contact-modal');\n    modal.classList.add('opened');\n  };\n\n  const handleDeleteContact = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <Menu className=\"additional-menu\" id={name}>\n      <li onClick={handleDeleteContact}>\n        <p>Delete</p>\n        <TiDeleteOutline className=\"deleteIcon\" size={25} />\n      </li>\n\n      <li>\n        <a href={`tel:${number}`}>\n          <p>Call</p>\n          <MdOutlineCall className=\"callIcon\" size={25} />\n        </a>\n      </li>\n\n      <li onClick={handleEditContact}>\n        <p>Edit</p>\n        <MdOutlineModeEditOutline className=\"editIcon\" size={25} />\n      </li>\n    </Menu>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { StyledLI } from './ContactItem.styled';\nimport { RxDotsVertical } from 'react-icons/rx';\nimport { AdditionalMenu } from 'components/AdditionalMenu/AdditionalMenu';\nimport { Btn } from 'utils/commonStyles';\nimport { useSelector } from 'react-redux';\nimport { selectTheme } from 'redux/selectors';\n\nexport const ContactItem = ({\n  id,\n  name,\n  number,\n  changeName,\n  changeNumber,\n  changeId,\n}) => {\n  const theme = useSelector(selectTheme);\n\n  const words = name.split(' ');\n  const leters = [];\n  words.forEach(word => leters.push(word[0]));\n  const fisrtLetters = leters.join('');\n\n  const getRandomColor = () => {\n    const opacity = theme === 'dark' ? 0.1 : 0.6;\n\n    const randomBetween = (min, max) =>\n      min + Math.floor(Math.random() * (max - min + 1));\n    const r = randomBetween(0, 255);\n    const g = randomBetween(0, 255);\n    const b = randomBetween(0, 255);\n    const rgb = `rgba(${r},${g},${b}, ${opacity})`;\n\n    return rgb;\n  };\n\n  const toggleAdditionalMenu = ({ target }) => {\n    const modals = document.querySelectorAll('.additional-menu');\n    modals.forEach(modal => {\n      if (target.ariaLabel === modal.id) {\n        modal.classList.toggle('opened');\n      } else {\n        modal.classList.remove('opened');\n      }\n    });\n  };\n\n  return (\n    <>\n      <StyledLI>\n        <div\n          className=\"fisrtLetters\"\n          style={{ backgroundColor: `${getRandomColor()}` }}\n        >\n          {fisrtLetters}\n        </div>\n        <div className=\"contact-data\">\n          <h3 className=\"name\">{name}</h3>\n          <p className=\"number\">{number}</p>\n        </div>\n\n        <Btn\n          type=\"button\"\n          className=\"additional-menu-btn\"\n          aria-label={name}\n          onClick={toggleAdditionalMenu}\n        >\n          <RxDotsVertical size={30} />\n        </Btn>\n        <AdditionalMenu\n          id={id}\n          name={name}\n          number={number}\n          changeName={changeName}\n          changeNumber={changeNumber}\n          changeId={changeId}\n        />\n      </StyledLI>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { colors } from 'utils/theme';\n\nexport const StyledUL = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n\n  .empty-list {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    max-height: 100vh;\n    height: auto;\n    width: 100%;\n    gap: 5px;\n    padding: 15px 0;\n    color: ${colors.mainColor};\n    text-align: center;\n    text-transform: uppercase;\n  }\n`;\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst contactsCheking = (contact, data) => {\n  if (contact.name === data.name) {\n    Notify.warning(`${data.name} is already in contacts.`);\n    return contact;\n  } else if (contact.number === data.number) {\n    Notify.warning(\n      `This number (${data.number}) is already in ${contact.name} contact.`\n    );\n    return contact;\n  }\n};\n\nexport const editContactsCheking = (contact, data, id) => {\n  if (contact.id === id) {\n    return;\n  }\n\n  if (contact.name === data.name) {\n    Notify.warning(`${data.name} is already in contacts.`);\n    return contact;\n  } else if (contact.number === data.number) {\n    Notify.warning(\n      `This number (${data.number}) is already in ${contact.name} contact.`\n    );\n    return contact;\n  }\n};\n\nexport default contactsCheking;\n","import styled from 'styled-components';\nimport { colors } from 'utils/theme';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  z-index: 2;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n  background-color: ${colors.backdropBg};\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  pointer-events: none;\n  opacity: 0;\n  transition: all 250ms ease-in-out;\n\n  &.opened {\n    pointer-events: all;\n    opacity: 1;\n  }\n\n  form {\n    background-color: ${colors.modalBg};\n    padding: 15px;\n    border-radius: 5px;\n    border: 1px solid ${colors.mainBorder};\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n\n    input {\n      border-radius: 5px;\n      border: 1px solid ${colors.mainBorder};\n      width: 250px;\n      height: 35px;\n      padding: 5px 10px;\n\n      margin: 0 auto 10px;\n\n      background-color: ${colors.mainTransparent};\n      color: ${colors.inputText};\n      text-align: center;\n      font-family: inherit;\n      font-size: 20px;\n\n      :focus,\n      :hover {\n        outline: none;\n      }\n    }\n\n    .btns-wrapper {\n      display: flex;\n      gap: 20px;\n    }\n    button {\n      width: 65px;\n\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      gap: 5px;\n\n      font-size: 14px;\n      font-weight: 500;\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeContact, fetchContacts } from 'redux/contactsOperations';\nimport { getContacts } from 'redux/selectors';\nimport { Btn } from 'utils/commonStyles';\nimport { editContactsCheking } from 'utils/contactsChecking';\nimport { Backdrop } from './EditContactForm.styled';\n\nexport const EditContactFrom = ({ id, name, number }) => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    document.querySelector('#name-changer').value = name;\n    document.querySelector('#num-changer').value = number;\n  }, [name, number]);\n\n  const closeModal = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    const modal = document.querySelector('.edit-contact-modal');\n    modal.classList.remove('opened');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const contactData = {\n      name: form.elements.name.value,\n      number: form.elements.number.value,\n    };\n    console.log('contactData', contactData);\n\n    const inContactList = contacts.filter(contact =>\n      editContactsCheking(contact, contactData, id)\n    ).length;\n\n    if (!inContactList) {\n      dispatch(changeContact({ id, contactData }));\n\n      dispatch(fetchContacts());\n      document.querySelector('.edit-contact-modal').classList.remove('opened');\n    }\n  };\n\n  return (\n    <Backdrop className=\"edit-contact-modal\" onClick={closeModal}>\n      <form className=\"edit-contact-form\" onSubmit={handleSubmit}>\n        <label htmlFor=\"name-changer\">{name}</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name-changer\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <label htmlFor=\"num-changer\">{number}</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          id=\"num-changer\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          required\n        />\n\n        <div className=\"btns-wrapper\">\n          <Btn type=\"submit\">Save</Btn>\n\n          <Btn type=\"button\" onClick={closeModal}>\n            Cancel\n          </Btn>\n        </div>\n      </form>\n    </Backdrop>\n  );\n};\n","import { ContactItem } from '../ContactItem/ContactItem';\nimport { StyledUL } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contactsOperations';\nimport { TbMoodEmpty } from 'react-icons/tb';\nimport closeMenu from 'utils/additionalMenuClosing';\nimport { EditContactFrom } from 'components/EditContactForm/EditContactForm';\nimport { useState } from 'react';\n\nexport const ContactList = () => {\n  const [nameForChange, setNameForChange] = useState('Name');\n  const [numberForChange, setNumberForChange] = useState('Number');\n  const [idForChange, setIdForChange] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const filterValue = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = () => {\n    if (contacts?.length) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filterValue)\n      );\n    }\n  };\n\n  return (\n    <>\n      <StyledUL onClick={closeMenu}>\n        {filteredContacts() ? (\n          filteredContacts()?.map(({ id, name, number }) => {\n            return (\n              <ContactItem\n                key={id}\n                id={id}\n                name={name}\n                number={number}\n                changeName={setNameForChange}\n                changeNumber={setNumberForChange}\n                changeId={setIdForChange}\n              />\n            );\n          })\n        ) : (\n          <div className=\"empty-list\">\n            <h3>There is no one here</h3>\n            <TbMoodEmpty size={100} />\n          </div>\n        )}\n      </StyledUL>\n\n      <EditContactFrom\n        name={nameForChange}\n        number={numberForChange}\n        id={idForChange}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { colors } from 'utils/theme';\n\nexport const FiltersForm = styled.form`\n  width: 250px;\n\n  margin: 0 auto;\n  margin-bottom: 15px;\n\n  display: flex;\n  flex-direction: column;\n\n  font-size: 18px;\n\n  label {\n    display: block;\n    text-align: start;\n    margin-bottom: 5px;\n  }\n\n  input {\n    margin: 0 auto;\n\n    border-radius: 5px;\n    border: 1px solid ${colors.mainBorder};\n    width: 250px;\n    height: 35px;\n    background-color: ${colors.mainTransparent};\n    color: ${colors.inputText};\n    text-align: center;\n    font-family: inherit;\n    font-size: 20px;\n    padding: 5px 10px;\n\n    :focus,\n    :hover {\n      outline: none;\n    }\n\n    :placeholder-shown {\n      color: ${colors.mainColor};\n      text-align: center;\n      font-size: 20px;\n    }\n  }\n`;\n","import { FiltersForm } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/selectors';\nimport { changeFilter } from 'redux/filterSlice';\nimport closeMenu from 'utils/additionalMenuClosing';\n\nexport const Filter = () => {\n  const dipatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChanger = e => {\n    dipatch(changeFilter(e.target.value.toLowerCase()));\n  };\n\n  return (\n    <FiltersForm onClick={closeMenu}>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <input\n        type=\"text\"\n        onChange={e => handleChanger(e)}\n        value={filter}\n        id=\"filter\"\n      />\n    </FiltersForm>\n  );\n};\n","import styled from 'styled-components';\nimport { colors } from 'utils/theme';\n\nexport const StyledWrapper = styled.div`\n  position: fixed;\n  z-index: 1;\n  bottom: 0;\n  right: 0;\n\n  box-shadow: 0px -1px 5px 0px ${colors.mainTransparent};\n  background-color: ${colors.modalBg};\n  border-top-right-radius: 15px;\n  border-top-left-radius: 15px;\n\n  padding: 15px 25px;\n  margin: 0 auto;\n  width: 100%;\n  min-height: 70px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  &.opened {\n    gap: 15px;\n  }\n\n  .creator-btn {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 5px;\n\n    height: 40px;\n    width: 290px;\n    padding: 5px 10px;\n    outline: none;\n    border-radius: 5px;\n\n    border: 1px solid ${colors.mainBorder};\n    background-color: transparent;\n    color: ${colors.mainColor};\n\n    font-size: 20px;\n    font-weight: 500;\n    font-family: inherit;\n  }\n\n  .creator-wrap {\n    max-height: 0;\n    overflow: hidden;\n\n    transition: max-height 0.25s ease-in-out;\n    transition-timing-function: ease-in-out;\n\n    &.opend {\n      max-height: 308px;\n    }\n  }\n\n  #creator {\n    transform: translateY(100%);\n    transition: all 250ms ease-in-out;\n\n    &.opend {\n      margin-bottom: 15px;\n      transform: translateY(0%);\n    }\n  }\n\n  .submit-btn {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n\n    font-size: 18px;\n    font-weight: 500;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport contactsCheking from 'utils/contactsChecking';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { addContact } from 'redux/contactsOperations';\nimport { StyledForm } from 'utils/commonStyles';\nimport { StyledWrapper } from './Form.styled';\nimport { FiUserPlus } from 'react-icons/fi';\nimport { MdKeyboardArrowUp } from 'react-icons/md';\nimport { HiOutlineMinusSm } from 'react-icons/hi';\nimport closeMenu from 'utils/additionalMenuClosing';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [isCreatorOpened, setIsCreatorOpened] = useState(false);\n\n  useEffect(() => {\n    document.querySelector('#ctreator-form').classList.toggle('opend');\n  }, [isCreatorOpened]);\n\n  const toggleCreator = () => {\n    setIsCreatorOpened(!isCreatorOpened);\n\n    document.querySelector('#creator').classList.toggle('opend');\n    document.querySelector('.creator-wrap').classList.toggle('opend');\n  };\n\n  const handleChange = event => {\n    switch (event.currentTarget.name) {\n      case 'name':\n        setName(event.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(event.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const inContactList = contacts.filter(contact =>\n      contactsCheking(contact, { name, number })\n    ).length;\n\n    if (!inContactList) {\n      toggleCreator();\n      dispatch(addContact({ name, number }));\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <StyledWrapper id=\"ctreator-form\" onClick={closeMenu}>\n      <div className=\"creator-wrap\">\n        <StyledForm onSubmit={handleSubmit} id=\"creator\">\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n          <label>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n\n          <button type=\"submit\" className=\"submit-btn\">\n            Add contact\n            <FiUserPlus />\n          </button>\n        </StyledForm>\n      </div>\n\n      <button className=\"creator-btn\" type=\"button\" onClick={toggleCreator}>\n        {isCreatorOpened ? (\n          <>\n            <span>Hide creator</span>\n            <HiOutlineMinusSm />\n          </>\n        ) : (\n          <>\n            <span>Create contact</span>\n            <MdKeyboardArrowUp />\n          </>\n        )}\n      </button>\n    </StyledWrapper>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Form } from 'components/Form/Form';\nimport closeMenu from 'utils/additionalMenuClosing';\nimport { StyledH2 } from 'utils/commonStyles';\n\nconst Contacts = () => {\n  return (\n    <>\n      <StyledH2 onClick={closeMenu}>Contacts</StyledH2>\n      <Form />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["StyledLI","styled","colors","Menu","AdditionalMenu","id","name","number","changeName","changeNumber","changeId","dispatch","useDispatch","className","onClick","deleteContact","size","href","document","querySelector","classList","add","ContactItem","theme","useSelector","selectTheme","words","split","leters","forEach","word","push","fisrtLetters","join","style","backgroundColor","opacity","randomBetween","min","max","Math","floor","random","r","g","b","getRandomColor","type","target","querySelectorAll","modal","ariaLabel","toggle","remove","StyledUL","contact","data","Notify","Backdrop","EditContactFrom","contacts","getContacts","useEffect","value","closeModal","e","currentTarget","onSubmit","event","preventDefault","form","contactData","elements","console","log","inContactList","filter","editContactsCheking","length","changeContact","fetchContacts","htmlFor","pattern","title","required","ContactList","useState","nameForChange","setNameForChange","numberForChange","setNumberForChange","idForChange","setIdForChange","filterValue","getFilter","filteredContacts","toLowerCase","includes","closeMenu","map","FiltersForm","Filter","dipatch","onChange","changeFilter","handleChanger","StyledWrapper","Form","setName","setNumber","isCreatorOpened","setIsCreatorOpened","toggleCreator","handleChange","reset","contactsCheking","addContact"],"sourceRoot":""}