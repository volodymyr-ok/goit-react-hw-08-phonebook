{"version":3,"file":"static/js/540.213f036a.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.styled.js","components/AdditionalMenu/AdditionalMenu.styled.js","components/AdditionalMenu/AdditionalMenu.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/EditContactForm/EditContactForm.styled.js","components/EditContactForm/EditContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","utils/contactsChecking.js","components/Form/Form.styled.js","components/Form/Form.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { colors } from 'utils/theme';\n\nexport const StyledLI = styled.li`\n  padding: 10px 0;\n  border-top: 1px solid ${colors.mainBorder};\n  border-bottom: 1px solid ${colors.mainBorder};\n  border-radius: 5px;\n\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  margin: 0 auto;\n  gap: 10px;\n  min-width: 250px;\n\n  .fisrtLetters {\n    min-width: 40px;\n    height: 40px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    border: 1px solid ${colors.mainBorder};\n  }\n  .contact-data {\n    display: inline-flex;\n    flex-direction: column;\n    gap: 5px;\n\n    .name {\n      /* font-weight: 400; */\n      font-size: 18px;\n      color: ${colors.mainColor};\n    }\n  }\n\n  .additional-menu-btn {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    /* width: 25px;\n    height: 25px; */\n    padding: 0;\n    margin-left: auto;\n\n    border-radius: 50%;\n    border: none;\n    background-color: ${colors.deleteContactBtn};\n    background-color: transparent;\n\n    color: ${colors.minorColor};\n    color: ${colors.mainColor};\n    font-weight: 700;\n    font-family: inherit;\n\n    cursor: pointer;\n\n    transform: translateX(45%);\n\n    svg {\n      pointer-events: none;\n    }\n\n    &:hover,\n    &:focus {\n      /* background-color: #9b6e14; */\n      /* color: #9b6e14; */\n      /* outline: 1px solid #9b6e14; */\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { colors } from 'utils/theme';\n\nexport const Menu = styled.ul`\n  position: absolute;\n  bottom: 47px;\n  right: 3px;\n  z-index: 1;\n\n  display: flex;\n  flex-direction: column;\n\n  padding: 0 5px;\n  transform: translate(0%, 20%);\n  opacity: 0;\n  pointer-events: none;\n  transition: all 250ms ease-in-out;\n\n  border-radius: 5px;\n  border-bottom-right-radius: 0;\n  border: 1px solid ${colors.mainBorder};\n  background-color: ${colors.modalBg};\n\n  &.opened {\n    pointer-events: all;\n    opacity: 1;\n    transform: translate(0, 0);\n  }\n\n  li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 10px;\n\n    min-height: 40px;\n    padding: 10px 5px;\n    background-color: transparent;\n    border: none;\n\n    color: ${colors.mainColor};\n    font-size: 18px;\n\n    cursor: pointer;\n\n    :hover,\n    :focus {\n      color: ${colors.white};\n    }\n\n    a {\n      width: 100%;\n      height: 100%;\n      text-decoration: none;\n      color: inherit;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      gap: 10px;\n    }\n  }\n\n  li:not(:last-child) {\n    border-bottom: 2px solid ${colors.mainBorder};\n  }\n\n  .editIcon {\n    color: ${colors.editIcon};\n  }\n  .callIcon {\n    color: ${colors.callIcon};\n  }\n  .deleteIcon {\n    color: ${colors.deleteIcon};\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contactsOperations';\nimport { TiDeleteOutline } from 'react-icons/ti';\nimport { MdOutlineCall, MdOutlineModeEditOutline } from 'react-icons/md';\nimport { Menu } from './AdditionalMenu.styled';\n\nexport const AdditionalMenu = ({\n  id,\n  name,\n  number,\n  changeName,\n  changeNumber,\n  changeId,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleEditContact = () => {\n    changeName(name);\n    changeNumber(number);\n    changeId(id);\n    const modal = document.querySelector('.edit-contact-modal');\n    modal.classList.add('opened');\n  };\n\n  const handleDeleteContact = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <Menu className=\"additional-menu\" id={name}>\n      <li onClick={handleDeleteContact}>\n        <p>Delete</p>\n        <TiDeleteOutline className=\"deleteIcon\" size={25} />\n      </li>\n\n      <li>\n        <a href={`tel:${number}`}>\n          <p>Call</p>\n          <MdOutlineCall className=\"callIcon\" size={25} />\n        </a>\n      </li>\n\n      <li onClick={handleEditContact}>\n        <p>Edit</p>\n        <MdOutlineModeEditOutline className=\"editIcon\" size={25} />\n      </li>\n    </Menu>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { StyledLI } from './ContactItem.styled';\nimport { RxDotsVertical } from 'react-icons/rx';\nimport { AdditionalMenu } from 'components/AdditionalMenu/AdditionalMenu';\nimport { Btn } from 'utils/commonStyles';\n\nexport const ContactItem = ({\n  id,\n  name,\n  number,\n  changeName,\n  changeNumber,\n  changeId,\n}) => {\n  const words = name.split(' ');\n  const leters = [];\n  words.forEach(word => {\n    leters.push(word[0]);\n  });\n  const fisrtLetters = leters.join('');\n\n  const getRandomColor = () => {\n    const randomBetween = (min, max) =>\n      min + Math.floor(Math.random() * (max - min + 1));\n    const r = randomBetween(0, 255);\n    const g = randomBetween(0, 255);\n    const b = randomBetween(0, 255);\n    const rgb = `rgba(${r},${g},${b}, 0.1)`;\n\n    return rgb;\n  };\n\n  const toggleAdditionalMenu = ({ target }) => {\n    const modals = document.querySelectorAll('.additional-menu');\n    modals.forEach(modal => {\n      if (target.ariaLabel === modal.id) {\n        modal.classList.toggle('opened');\n      } else {\n        modal.classList.remove('opened');\n      }\n    });\n  };\n\n  return (\n    <>\n      <StyledLI>\n        <div\n          className=\"fisrtLetters\"\n          style={{ backgroundColor: `${getRandomColor()}` }}\n        >\n          {fisrtLetters}\n        </div>\n        <div className=\"contact-data\">\n          <h3 className=\"name\">{name}</h3>\n          <p className=\"number\">{number}</p>\n        </div>\n\n        <Btn\n          type=\"button\"\n          className=\"additional-menu-btn\"\n          aria-label={name}\n          onClick={toggleAdditionalMenu}\n        >\n          <RxDotsVertical size={30} />\n        </Btn>\n        <AdditionalMenu\n          id={id}\n          name={name}\n          number={number}\n          changeName={changeName}\n          changeNumber={changeNumber}\n          changeId={changeId}\n        />\n      </StyledLI>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { colors } from 'utils/theme';\n\nexport const StyledUL = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n\n  .empty-list {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    max-height: 100vh;\n    height: auto;\n    width: 100%;\n    gap: 5px;\n    padding: 15px 0;\n    color: ${colors.mainColor};\n    text-align: center;\n    text-transform: uppercase;\n  }\n`;\n","import styled from 'styled-components';\nimport { colors } from 'utils/theme';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  z-index: 2;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n  background-color: ${colors.backdropBg};\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  pointer-events: none;\n  opacity: 0;\n  transition: all 250ms ease-in-out;\n\n  &.opened {\n    pointer-events: all;\n    opacity: 1;\n  }\n\n  form {\n    background-color: ${colors.modalBg};\n    padding: 15px;\n    border-radius: 5px;\n    border: 1px solid ${colors.mainBorder};\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n\n    input {\n      border-radius: 5px;\n      border: 1px solid ${colors.mainBorder};\n      width: 250px;\n      height: 35px;\n      padding: 5px 10px;\n\n      margin: 0 auto 10px;\n\n      background-color: ${colors.darkTransparent};\n      color: ${colors.inputText};\n      text-align: center;\n      font-family: inherit;\n      font-size: 20px;\n\n      :focus,\n      :hover {\n        outline: none;\n      }\n    }\n\n    .btns-wrapper {\n      display: flex;\n      gap: 20px;\n    }\n    button {\n      width: 65px;\n\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      gap: 5px;\n\n      font-size: 14px;\n      font-weight: 500;\n    }\n  }\n`;\n","// import { useSelector } from 'react-redux';\n// import { getContacts } from 'redux/selectors';\nimport { Btn } from 'utils/commonStyles';\nimport { Backdrop } from './EditContactForm.styled';\n\nexport const EditContactFrom = (\n  id,\n  name,\n  number,\n  changeName,\n  changeNumber,\n  changeId\n) => {\n  // const contacts = useSelector(getContacts);\n\n  const closeModal = e => {\n    console.log(e.target);\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    const modal = document.querySelector('.edit-contact-modal');\n    modal.classList.remove('opened');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // const inContactList = contacts.filter(contact =>\n    //   contactsCheking(contact, { name, number })\n    // ).length;\n\n    // if (!inContactList) {\n    //   toggleCreator();\n    //   dispatch(addContact({ name, number }));\n    // }\n\n    // reset();\n  };\n\n  return (\n    <Backdrop className=\"edit-contact-modal\" onClick={closeModal}>\n      <form className=\"edit-contact-form\" onSubmit={handleSubmit}>\n        <label htmlFor=\"name-changer\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name-changer\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <label htmlFor=\"num-changer\">Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          id=\"num-changer\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          required\n        />\n\n        <div className=\"btns-wrapper\">\n          <Btn type=\"submit\">Save</Btn>\n\n          <Btn type=\"button\" onClick={closeModal}>\n            Cancel\n          </Btn>\n        </div>\n      </form>\n    </Backdrop>\n  );\n};\n","import { ContactItem } from '../ContactItem/ContactItem';\nimport { StyledUL } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contactsOperations';\nimport { TbMoodEmpty } from 'react-icons/tb';\nimport closeMenu from 'utils/additionalMenuClosing';\nimport { EditContactFrom } from 'components/EditContactForm/EditContactForm';\nimport { useState } from 'react';\n\nexport const ContactList = () => {\n  const [nameForChange, setNameForChange] = useState('Name');\n  const [numberForChange, setNumberForChange] = useState('Number');\n  const [idForChange, setIdForChange] = useState('');\n  console.log(nameForChange);\n\n  const contacts = useSelector(getContacts);\n  const filterValue = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = () => {\n    if (contacts?.length) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filterValue)\n      );\n    }\n  };\n\n  return (\n    <>\n      <StyledUL onClick={closeMenu}>\n        {filteredContacts() ? (\n          filteredContacts()?.map(({ id, name, number }) => {\n            return (\n              <ContactItem\n                key={id}\n                id={id}\n                name={name}\n                number={number}\n                changeName={setNameForChange}\n                changeNumber={setNumberForChange}\n                changeId={setIdForChange}\n              />\n            );\n          })\n        ) : (\n          <div className=\"empty-list\">\n            <h3>There is no one here</h3>\n            <TbMoodEmpty size={100} />\n          </div>\n        )}\n      </StyledUL>\n\n      <EditContactFrom\n        name={nameForChange}\n        number={numberForChange}\n        id={idForChange}\n        resetName={setNameForChange}\n        resetNumber={setNumberForChange}\n        resetId={setIdForChange}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { colors } from 'utils/theme';\n\nexport const FiltersForm = styled.form`\n  width: 250px;\n\n  margin: 0 auto;\n  margin-bottom: 15px;\n\n  display: flex;\n  flex-direction: column;\n\n  font-size: 18px;\n\n  label {\n    display: block;\n    text-align: start;\n    margin-bottom: 5px;\n  }\n\n  input {\n    margin: 0 auto;\n\n    border-radius: 5px;\n    border: 1px solid ${colors.mainBorder};\n    width: 250px;\n    height: 35px;\n    background-color: ${colors.darkTransparent};\n    color: ${colors.inputText};\n    text-align: center;\n    font-family: inherit;\n    font-size: 20px;\n    padding: 5px 10px;\n\n    :focus,\n    :hover {\n      outline: none;\n    }\n\n    :placeholder-shown {\n      color: ${colors.mainColor};\n      text-align: center;\n      font-size: 20px;\n    }\n  }\n`;\n","import { FiltersForm } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux'; // useDispatch,\nimport { getFilter } from 'redux/selectors';\nimport { changeFilter } from 'redux/filterSlice';\nimport closeMenu from 'utils/additionalMenuClosing';\n\nexport const Filter = () => {\n  const dipatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChanger = e => {\n    dipatch(changeFilter(e.target.value.toLowerCase()));\n  };\n\n  return (\n    <FiltersForm onClick={closeMenu}>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <input\n        type=\"text\"\n        onChange={e => handleChanger(e)}\n        value={filter}\n        id=\"filter\"\n      />\n    </FiltersForm>\n  );\n};\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst contactsCheking = (contact, data) => {\n  if (contact.name === data.name) {\n    Notify.warning(`${data.name} is already in contacts.`);\n    return contact;\n  } else if (contact.number === data.number) {\n    Notify.warning(\n      `This number (${data.number}) is already in ${contact.name} contact.`\n    );\n    return contact;\n  }\n};\n\nexport default contactsCheking;\n","import styled from 'styled-components';\nimport { colors } from 'utils/theme';\n\nexport const StyledWrapper = styled.div`\n  position: fixed;\n  z-index: 1;\n  bottom: 0;\n  right: 0;\n\n  box-shadow: 0px -1px 5px 0px ${colors.darkTransparent};\n  background-color: ${colors.modalBg};\n  border-top-right-radius: 15px;\n  border-top-left-radius: 15px;\n\n  padding: 15px 25px;\n  margin: 0 auto;\n  width: 100%;\n  min-height: 70px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  &.opened {\n    gap: 15px;\n  }\n\n  .creator-btn {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 5px;\n\n    height: 40px;\n    width: 290px;\n    padding: 5px 10px;\n    outline: none;\n    border-radius: 5px;\n\n    border: 1px solid ${colors.mainBorder};\n    background-color: transparent;\n    color: ${colors.mainColor};\n\n    font-size: 20px;\n    font-weight: 500;\n    font-family: inherit;\n  }\n\n  .creator-wrap {\n    max-height: 0;\n    overflow: hidden;\n\n    transition: max-height 0.25s ease-in-out;\n    transition-timing-function: ease-in-out;\n\n    &.opend {\n      max-height: 308px;\n    }\n  }\n\n  #creator {\n    transform: translateY(100%);\n    transition: all 250ms ease-in-out;\n\n    &.opend {\n      margin-bottom: 15px;\n      transform: translateY(0%);\n    }\n  }\n\n  .submit-btn {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n\n    font-size: 18px;\n    font-weight: 500;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport contactsCheking from 'utils/contactsChecking';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { addContact } from 'redux/contactsOperations';\nimport { StyledForm } from 'utils/commonStyles';\nimport { StyledWrapper } from './Form.styled';\nimport { FiUserPlus } from 'react-icons/fi';\nimport { MdKeyboardArrowUp } from 'react-icons/md';\nimport { HiOutlineMinusSm } from 'react-icons/hi';\nimport closeMenu from 'utils/additionalMenuClosing';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [isCreatorOpened, setIsCreatorOpened] = useState(false);\n\n  useEffect(() => {\n    document.querySelector('#ctreator-form').classList.toggle('opend');\n  }, [isCreatorOpened]);\n\n  const toggleCreator = () => {\n    setIsCreatorOpened(!isCreatorOpened);\n\n    document.querySelector('#creator').classList.toggle('opend');\n    document.querySelector('.creator-wrap').classList.toggle('opend');\n  };\n\n  const handleChange = event => {\n    switch (event.currentTarget.name) {\n      case 'name':\n        setName(event.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(event.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const inContactList = contacts.filter(contact =>\n      contactsCheking(contact, { name, number })\n    ).length;\n\n    if (!inContactList) {\n      toggleCreator();\n      dispatch(addContact({ name, number }));\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <StyledWrapper id=\"ctreator-form\" onClick={closeMenu}>\n      <div className=\"creator-wrap\">\n        <StyledForm onSubmit={handleSubmit} id=\"creator\">\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n          <label>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n\n          <button type=\"submit\" className=\"submit-btn\">\n            Add contact\n            <FiUserPlus />\n          </button>\n        </StyledForm>\n      </div>\n\n      <button className=\"creator-btn\" type=\"button\" onClick={toggleCreator}>\n        {isCreatorOpened ? (\n          <>\n            <span>Hide creator</span>\n            <HiOutlineMinusSm />\n          </>\n        ) : (\n          <>\n            <span>Create contact</span>\n            <MdKeyboardArrowUp />\n          </>\n        )}\n      </button>\n    </StyledWrapper>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Form } from 'components/Form/Form';\nimport closeMenu from 'utils/additionalMenuClosing';\nimport { StyledH2 } from 'utils/commonStyles';\n\nconst Contacts = () => {\n  return (\n    <>\n      <StyledH2 onClick={closeMenu}>Contacts</StyledH2>\n      <Form />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["StyledLI","styled","colors","Menu","AdditionalMenu","id","name","number","changeName","changeNumber","changeId","dispatch","useDispatch","className","onClick","deleteContact","size","href","document","querySelector","classList","add","ContactItem","words","split","leters","forEach","word","push","fisrtLetters","join","style","backgroundColor","randomBetween","min","max","Math","floor","random","r","g","b","getRandomColor","type","target","querySelectorAll","modal","ariaLabel","toggle","remove","StyledUL","Backdrop","EditContactFrom","closeModal","e","console","log","currentTarget","onSubmit","event","preventDefault","htmlFor","pattern","title","required","ContactList","useState","nameForChange","setNameForChange","numberForChange","setNumberForChange","idForChange","setIdForChange","contacts","useSelector","getContacts","filterValue","getFilter","useEffect","fetchContacts","filteredContacts","length","filter","contact","toLowerCase","includes","closeMenu","map","resetName","resetNumber","resetId","FiltersForm","Filter","dipatch","onChange","changeFilter","value","handleChanger","data","Notify","StyledWrapper","Form","setName","setNumber","isCreatorOpened","setIsCreatorOpened","toggleCreator","handleChange","reset","contactsCheking","addContact"],"sourceRoot":""}