{"version":3,"file":"static/js/704.7aae7a75.chunk.js","mappings":"2PAEaA,E,QAAoBC,GAAAA,IAAH,+XAQN,qBAAGC,MAAkBC,UAArB,IACX,qBAAGD,MAAkBE,YAArB,IACO,qBAAGF,MAAkBG,cAArB,IAMM,qBAAGH,MAAkBI,eAArB,IAEJ,qBAAGJ,MAAkBK,mBAArB,I,SCdTC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACHC,EAAQO,GACR,MACF,IAAK,QACHL,EAASK,GACT,MACF,IAAK,WACHH,EAAYG,GACZ,MACF,QACE,OAEL,EAUD,OACE,UAACpB,EAAD,YACE,SAAC,KAAD,mCAEA,UAAC,KAAD,CAAYqB,SAZK,SAAAC,GACnBA,EAAEC,iBACFd,GAASe,EAAAA,EAAAA,IAAS,CAAEZ,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACjCH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAMG,WACE,qCAEE,kBACEQ,KAAK,OACLb,KAAK,OACLQ,MAAOR,EACPc,SAAUR,EACVS,UAAQ,QAIZ,sCAEE,kBACEF,KAAK,OACLb,KAAK,QACLQ,MAAON,EACPY,SAAUR,EACVS,UAAQ,QAGZ,yCAEE,kBACEF,KAAK,WACLb,KAAK,WACLQ,MAAOJ,EACPU,SAAUR,EACVS,UAAQ,QAGZ,mBAAQC,GAAG,eAAeH,KAAK,SAA/B,2BAMP,ECpED,EARqB,WACnB,OACE,+BACE,SAACjB,EAAD,KAGL,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterView/RegisterView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledRegisterDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 80vh;\n\n  button {\n    background-color: ${({ theme }) => theme.enterBtnBG};\n    color: ${({ theme }) => theme.enterBtnText};\n    border-color: ${({ theme }) => theme.enterBtnBorder};\n\n    transition: all 250ms ease-in-out;\n\n    :hover,\n    :focus {\n      background-color: ${({ theme }) => theme.enterBtnBGHover};\n      color: inherit;\n      border-color: ${({ theme }) => theme.enterBtnBorderHover};\n    }\n  }\n`;\n","import { StyledForm, StyledH2 } from 'utils/commonStyles';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/authOperations';\nimport { StyledRegisterDiv } from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <StyledRegisterDiv>\n      <StyledH2>Create your account</StyledH2>\n\n      <StyledForm onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            required\n          />\n        </label>\n\n        <label>\n          Email\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <label>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <button id=\"register-btn\" type=\"sumbit\">\n          Register\n        </button>\n      </StyledForm>\n    </StyledRegisterDiv>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst RegisterView = () => {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default RegisterView;\n"],"names":["StyledRegisterDiv","styled","theme","enterBtnBG","enterBtnText","enterBtnBorder","enterBtnBGHover","enterBtnBorderHover","RegisterForm","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","register","type","onChange","required","id"],"sourceRoot":""}